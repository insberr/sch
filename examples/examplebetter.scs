
// <term> [arguments]

// schedule <id>
schedule default {
    desc Regular Bell Schedule; // desc <info> (shown below schedule)

    // classes
    // class <type> [num] <start> <end>
    class zero 6:35 7:30;
    class period 1 7:35 8:45;
    class period 2 8:50 9:55;
    class period 3 9:55 11:40;
    class period 4 11:45 12:55;
    class period 5 13:00 14:05;
    class dismissal 14:05 14:10;

    //lunch <num> <type> <start> <end>
    // really dont see the need for this complex stuff, per grade lunches would be handled by overrides. 
    lunch {
        based 3 {
            lunch 1 9:55 10:25;
            lunch 2 10:30 11:00;
            lunch 3 11:10 11:40;
        };
        // if lunch is based on two periods (this was that multilunch idea i had but never implemented)
        based 4 {
            lunch 4 11:40 12:10;
            lunch 5 12:15 12:55;
        };
    };

    overide cambridge-10 {
        only grade 10 
        only classes contains 11 or 12 or 13 // figure this out later
        // if these conditions pass, the following is injected into the body
        override replace 1 period 11 <time>;
        override replace 2 period 12  <time>;
        override append 2 period 13 <time>;
    }

    overide cambridge-11 {
        // do code
    }

};

schedule default-nolunch inherit default {
    lunchBased false; // same as default but with no lunches
    // override <replace/prepend/append> <index> <type> [num] <start> <end> (index is the 0 based index of the class, first class definied is 0, then 1 etc etc.)
    override replace 6 dismissal 14:05 14:35 //make dismissal 30 minutes long

};


// event <id>
event adv {
    // every <dayofweek>
    every tue;
    every thu;
    schedule adv;
    date 12-27-2022; // specify specific date
};
