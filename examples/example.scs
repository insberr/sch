
// Schedule <name>
Schedule normal {
    Description: Default schedule;
    Class [Advisory] 7:30am | 8am;
    Class [Period 1] 7:30am | 8:00am;
    // Can also write just the period number ONLY FOR PERIODS
    Class [2] 7:30am | 8:00am;
    Class [3] 7:30am | 8:00am;
    Class [4] 7:30am | 8:00am;
    Class [5] 7:30am | 8:00am;
    Class [Dismissal] 7:30am | 8:00am;

    Lunch [Config] based on period 3 | passing 5min;
    Lunch [1] 10:30 | 11:00;
    Lunch [2] 11:00 | 11:30;
}

Schedule LateStart1Hour {
    // write code here
}

Schedule Pain inherit normal {
    // do stuff
}

// This is just an idea, might be useless
Schedule [SomethingWeird] {
    // If for some reason the schedule needs to be reused from an existing one
    #use Normal;
    // white stuff that changes the values maybe
}

// events. you could put this in a seperat file aswell

// Message only event
Event [SingleDay, MessageOnly] {
    date: October 23, 2022;
    message: 'Test';
}

// Single day event
Event [SingleDay] {
    date: October 23, 2022;
    message: 'Test';
    schedule: EarlyDismissal;
}

// Group of events that use the same schedule, but different days have different messages
// write ...

// A event that reoccurrs
Event [Reocurring] {
    message: '1 Hour Late Start';
    schedule: LateStart1Hour;
    occurs: [
        November 10, 2022;
        December 15, 2022;
    ];
}

/* JS Output
    {
        Schedules: {
            Normal: {
                Classes: [
                    // the type is written in its ts enum form, in reality itll be a number
                    { type: Advisory, period: null, ... },
                    { type: Period, period: 1, ... },
                ]
            },
            ...
        },
        Events: [
            ...
        ]
    }
*/
